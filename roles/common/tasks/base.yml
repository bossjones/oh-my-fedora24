---

## shell
# (HACK): Some linux distributions didn't provide a default .bashrc.
- name: ensure $HOME/.bashrc is present
  command: touch {{user_home}}/.bashrc

# - name: ensure $HOME/.zshrc is present
#   command: touch {{user_home}}/.zshrc

# - name: get stat of bash ".profile"
#   stat: path={{user_home}}/.profile
#   register: bash_profile_stat

# - name: back up bash ".profile"
#   shell: cat {{user_home}}/.profile > {{user_home}}/.profile-backup-by-oh-my-laptop.$(date +%F_%T) && rm {{user_home}}/.profile
#   when: bash_profile_stat.stat.exists

# - name: get stat of zsh ".zprofile"
#   stat: path={{user_home}}/.zprofile
#   register: zsh_zprofile_stat

# - name: back up zsh ".zprofile"
#   shell: cat {{user_home}}/.zprofile > {{user_home}}/.zprofile-backup-by-oh-my-laptop.$(date +%F_%T) && rm {{user_home}}/.zprofile
#   when: zsh_zprofile_stat.stat.exists

# ## zsh is not totally compatible with bash
# - name: update zsh profile
#   copy: src=zsh_profile.sh dest={{user_home}}/.zprofile

# # although bash and zsh is not 100% compatible, this will works in most cases.
# - name: link $HOME/.profile(bash) to $HOME/.zprofile(zsh)
#   file: src={{user_home}}/.zprofile dest={{user_home}}/.profile state=link

# ## oh-my-zsh
# # clone oh-my-zsh when initialize
# - name: test whether or not oh-my-zsh has been cloned before
#   shell: if [ -f {{user_home}}/.oh-my-zsh/oh-my-zsh.sh ]; then true; else false; fi
#   register: result
#   ignore_errors: True

# # `git clone --depth=1` to improve speed
# - name: git clone oh-my-zsh repo
#   git: repo=https://github.com/robbyrussell/oh-my-zsh.git
#        dest={{user_home}}/.oh-my-zsh
#        depth=1
#   when: result|failed

# - name: backup original zshrc
#   copy: src={{user_home}}/.zshrc dest={{user_home}}/.zshrc.orig

# - name: deploy .zshrc
#   template: src=zshrc.sh dest={{user_home}}/.zshrc owner={{whoami}}

# - name: set zsh as default user shell
#   sudo: yes
#   shell: chsh -s $(which zsh) {{whoami}}

# # add a tmux.conf
# - name: settings tmux.conf
#   copy: src=tmux.conf dest={{user_home}}/.tmux.conf

- name: clone bash_it
  git: repo=https://github.com/Bash-it/bash-it.git
       dest="/home/{{base_vars.USER}}/.bash_it"
       update=no
       depth=1
  become: "{{base_vars.USER}}"
  become_user: "{{base_vars.USER}}"

# Leaving this here because we need the folder structure in place to setup pocketsphinx
- name: Create ~/.bash_it/themes/devops
  file: path="/home/{{base_vars.USER}}/.bash_it/themes/devops"
        state=directory
        mode=0755
        recurse=yes
        owner="{{base_vars.USER}}"
        group="{{base_vars.USER}}"

- name: configure devops.theme.bash
  template: src="home/{{base_vars.USER}}/bash_it/themes/devops/devops.theme.bash.j2"
            dest="/home/{{base_vars.USER}}/.bash_it/themes/devops/devops.theme.bash"
            owner="{{base_vars.USER}}"
            group="{{base_vars.USER}}"
            mode=0644
            backup=yes
  tags:
  - bash_it
  - configuration

- name: configure bash_profile
  template: src="home/{{base_vars.USER}}/bash_profile.j2"
            dest="/home/{{base_vars.USER}}/.bash_profile"
            owner="{{base_vars.USER}}"
            group="{{base_vars.USER}}"
            mode=0644
            backup=yes
  tags:
  - bash_profile
  - configuration

- name: configure bashrc
  template: src="home/{{base_vars.USER}}/bashrc.j2"
            dest="/home/{{base_vars.USER}}/.bashrc"
            owner="{{base_vars.USER}}"
            group="{{base_vars.USER}}"
            mode=0644
            backup=yes
  tags:
  - bashrc
  - configuration
