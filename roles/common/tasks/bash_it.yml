---

# ---
# repository: https://github.com/revans/bash-it.git
# version: master
# theme: pure
# aliases: []
# plugins: []
# completions: []
#
# user: "{{ ansible_user_id }}"


# TODO: have bash_it run before this shell script
- name: clone bash_it
  git: repo=https://github.com/Bash-it/bash-it.git
       dest="/home/{{base_vars.USER}}/.bash_it"
       update=no
       depth=1
  become: "{{base_vars.USER}}"
  become_user: "{{base_vars.USER}}"

# Leaving this here because we need the folder structure in place to setup pocketsphinx
- name: Create ~user/.bash_it/themes/devops
  file: path="/home/{{base_vars.USER}}/.bash_it/themes/devops"
        state=directory
        mode=0755
        recurse=yes
        owner="{{base_vars.USER}}"
        group="{{base_vars.USER}}"

- name: configure devops.theme.bash
  template: src="home/{{base_vars.USER}}/bash_it/themes/devops/devops.theme.bash.j2"
            dest="/home/{{base_vars.USER}}/.bash_it/themes/devops/devops.theme.bash"
            owner="{{base_vars.USER}}"
            group="{{base_vars.USER}}"
            mode=0644
            backup=yes
  tags:
  - bash_it
  - configuration

- name: Register home directory for {{ base_vars.USER }}
  shell: >
    getent passwd {{ base_vars.USER }} | cut -d: -f6
  changed_when: false
  register: linux_user_home

- name: Register current login shell for {{ base_vars.USER }}
  shell: >
    getent passwd {{ base_vars.USER }} | cut -d: -f7
  changed_when: false
  register: linux_user_shell

- name: Set facts
  set_fact:
    user_home: "{{ linux_user_home.stdout }}"
    user_shell: "{{ linux_user_shell.stdout }}"

- name: assert home directory is detected
  assert: { that: user_home != "" }

- name: assert current shell is detected
  assert: { that: user_shell != "" }

- name: "clone bash_it for {{ base_vars.USER }}"
  git:
    repo: "{{ repository }}"
    dest: "{{ user_home }}/.bash_it"
    version: "{{ version }}"
  become: "{{ base_vars.USER }}"

# - name: .bash_profile loads .bashrc for {{ base_vars.USER }}
#   blockinfile:
#     dest: "{{ user_home }}/.bash_profile"
#     create: yes
#     owner: "{{ base_vars.USER }}"
#     block: |
#       if [ -f ~/.bashrc ]; then
#         source ~/.bashrc
#       fi

- name: "change shell to bash for {{ base_vars.USER }}"
  command: "chsh -s /bin/bash {{ base_vars.USER }}"
  become_user: root
  when: user_shell != "/bin/bash"

# - name: install bash_it on .bashrc for {{ base_vars.USER }}
#   lineinfile:
#     dest: "{{ user_home }}/.bashrc"
#     create: yes
#     owner: "{{ base_vars.USER }}"
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#   with_items:
#     - { regexp: '^export BASH_IT=', line: 'export BASH_IT="$HOME/.bash_it"' }
#     - { regexp: '^export BASH_IT_THEME=', line: 'export BASH_IT_THEME="{{ theme }}"' }
#     - { regexp: '^source \$BASH_IT', line: 'source $BASH_IT/bash_it.sh' }


- name: "initialize bash_it directories for {{ base_vars.USER }}"
  file:
    path: "{{ user_home }}/.bash_it/{{ item }}/enabled"
    state: directory
    owner: "{{ base_vars.USER }}"
  with_items:
    - "plugins"
    - "aliases"
    - "completion"

- name: "install bash_it plugins for {{ base_vars.USER }}"
  file:
    src: "{{ user_home }}/.bash_it/plugins/available/{{ item }}.plugin.bash"
    dest: "{{ user_home }}/.bash_it/plugins/enabled/{{ item }}.plugin.bash"
    state: link
    owner: "{{ base_vars.USER }}"
  with_items: '{{ plugins }}'

- name: "install bash_it aliases for {{ base_vars.USER }}"
  file:
    src: "{{ user_home }}/.bash_it/aliases/available/{{ item }}.aliases.bash"
    dest: "{{ user_home }}/.bash_it/aliases/enabled/{{ item }}.aliases.bash"
    state: link
    owner: "{{ base_vars.USER }}"
  with_items: '{{ aliases }}'

- name: "install bash_it completions for {{ base_vars.USER }}"
  file:
    src: "{{ user_home }}/.bash_it/completion/available/{{ item }}.completion.bash"
    dest: "{{ user_home }}/.bash_it/completion/enabled/{{ item }}.completion.bash"
    state: link
    owner: "{{ base_vars.USER }}"
  with_items: '{{ completions }}'
